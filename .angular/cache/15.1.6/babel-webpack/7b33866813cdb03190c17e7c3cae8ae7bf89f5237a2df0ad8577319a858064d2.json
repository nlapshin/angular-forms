{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AppNgFormControlComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppNgFormControlComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name must be at least 4 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppNgFormControlComponent_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name cannot be Bob.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppNgFormControlComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, AppNgFormControlComponent_div_5_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(2, AppNgFormControlComponent_div_5_div_2_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(3, AppNgFormControlComponent_div_5_div_3_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.form.get(\"title\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.form.get(\"title\")) == null ? null : tmp_1_0.hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.form.get(\"title\")) == null ? null : tmp_2_0.hasError(\"forbiddenName\"));\n  }\n}\nfunction AppNgFormControlComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const comp_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", comp_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(comp_r6);\n  }\n}\nfunction AppNgFormControlComponent_li_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const p_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\"\", p_r7.title, \" (\", p_r7.company, \") - \", p_r7.price, \"\");\n  }\n}\nexport class Phone {\n  constructor(title, price, company) {\n    this.title = title;\n    this.price = price;\n    this.company = company;\n  }\n}\nexport class AppNgFormControlComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.phones = [];\n    this.companies = [\"Apple\", \"Huawei\", \"Xiaomi\", \"Samsung\", \"LG\", \"Motorola\", \"Alcatel\"];\n    this.form = this.formBuilder.group({\n      title: ['', [Validators.required, Validators.minLength(4), this.forbiddenNameValidator('bob')]],\n      price: [null, Validators.required],\n      company: ['']\n    });\n  }\n  // Custom validator function for the 'title' field\n  forbiddenNameValidator(forbiddenName) {\n    return control => {\n      const forbidden = control.value === forbiddenName;\n      return forbidden ? {\n        'forbiddenName': {\n          value: control.value\n        }\n      } : null;\n    };\n  }\n  // Function to add a new phone to the list\n  addPhone() {\n    if (this.form.valid) {\n      const phone = {\n        title: this.form.get('title')?.value,\n        price: this.form.get('price')?.value,\n        company: this.form.get('company')?.value\n      };\n      this.phones.push(phone);\n    }\n  }\n}\nAppNgFormControlComponent.ɵfac = function AppNgFormControlComponent_Factory(t) {\n  return new (t || AppNgFormControlComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAppNgFormControlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppNgFormControlComponent,\n  selectors: [[\"app-ng-form-control\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[1, \"form-group\"], [\"formControlName\", \"title\", \"required\", \"\", \"minlength\", \"4\", 1, \"form-control\"], [\"class\", \"alert\", 4, \"ngIf\"], [\"type\", \"number\", \"formControlName\", \"price\", 1, \"form-control\"], [\"formControlName\", \"company\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-default\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"alert\"], [4, \"ngIf\"], [3, \"value\"]],\n  template: function AppNgFormControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"label\");\n      i0.ɵɵtext(3, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043C\\u043E\\u0434\\u0435\\u043B\\u0438\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 1);\n      i0.ɵɵtemplate(5, AppNgFormControlComponent_div_5_Template, 4, 3, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 0)(7, \"label\");\n      i0.ɵɵtext(8, \"\\u0426\\u0435\\u043D\\u0430\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 0)(11, \"label\");\n      i0.ɵɵtext(12, \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"select\", 4);\n      i0.ɵɵtemplate(14, AppNgFormControlComponent_option_14_Template, 2, 2, \"option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 0)(16, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function AppNgFormControlComponent_Template_button_click_16_listener() {\n        return ctx.addPhone();\n      });\n      i0.ɵɵtext(17, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\")(19, \"h3\");\n      i0.ɵɵtext(20, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u044B\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"ul\");\n      i0.ɵɵtemplate(22, AppNgFormControlComponent_li_22_Template, 2, 3, \"li\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_0_0;\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx.form.get(\"title\")) == null ? null : tmp_0_0.invalid) && (((tmp_0_0 = ctx.form.get(\"title\")) == null ? null : tmp_0_0.dirty) || ((tmp_0_0 = ctx.form.get(\"title\")) == null ? null : tmp_0_0.touched)));\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.companies);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.phones);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.RequiredValidator, i1.MinLengthValidator, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","Phone","constructor","title","price","company","AppNgFormControlComponent","formBuilder","form","group","required","minLength","forbiddenNameValidator","forbiddenName","control","forbidden","value","addPhone","valid","phone","get","phones","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/nik/projects/webinar/angular-forms/src/app/components/ngFormControl.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nexport class Phone{\n  constructor(public title: string, \n              public price: number, \n              public company: string)\n  { }\n}\n\nexport interface IForm {\n  title: string;\n  price: number;\n  company: string;\n}\n\n@Component({\n  selector: 'app-ng-form-control',\n  template: `\n  <div>\n    <div class=\"form-group\">\n        <label>Название модели</label>\n        <input class=\"form-control\" formControlName=\"title\" required minlength=\"4\" />\n        <div *ngIf=\"form.get('title')?.invalid && (form.get('title')?.dirty || form.get('title')?.touched)\"\n            class=\"alert\">\n        <div *ngIf=\"form.get('title')?.hasError('required')\">Name is required.</div>\n        <div *ngIf=\"form.get('title')?.hasError('minlength')\">Name must be at least 4 characters long.</div>\n        <div *ngIf=\"form.get('title')?.hasError('forbiddenName')\">Name cannot be Bob.</div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label>Цена</label>\n        <input type=\"number\" class=\"form-control\" formControlName=\"price\" />\n    </div>\n\n    <div class=\"form-group\">\n        <label>Производитель</label>\n        <select class=\"form-control\" formControlName=\"company\">\n        <option *ngFor=\"let comp of companies\" [value]=\"comp\">{{ comp }}</option>\n        </select>\n    </div>\n\n    <div class=\"form-group\">\n        <button class=\"btn btn-default\" (click)=\"addPhone()\">Добавить</button>\n    </div>\n    </div>\n\n    <div>\n    <h3>Добавленные элементы</h3>\n    <ul>\n        <li *ngFor=\"let p of phones\">{{ p.title }} ({{ p.company }}) - {{ p.price }}</li>\n    </ul>\n    </div>\n  `\n})\nexport class AppNgFormControlComponent {\n    form: FormGroup;\n    phones: Phone[] = [];\n    companies: string[] = [\"Apple\", \"Huawei\", \"Xiaomi\", \"Samsung\", \"LG\", \"Motorola\", \"Alcatel\"];\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      title: ['', [Validators.required, Validators.minLength(4), this.forbiddenNameValidator('bob')]],\n      price: [null, Validators.required],\n      company: [''],\n    });\n  }\n\n  // Custom validator function for the 'title' field\n  forbiddenNameValidator(forbiddenName: string) {\n    return (control: FormControl) => {\n      const forbidden = control.value === forbiddenName;\n      return forbidden ? { 'forbiddenName': { value: control.value } } : null;\n    };\n  }\n\n  // Function to add a new phone to the list\n  addPhone() {\n    if (this.form.valid) {\n      const phone = {\n        title: this.form.get('title')?.value,\n        price: this.form.get('price')?.value,\n        company: this.form.get('company')?.value,\n      };\n      this.phones.push(phone);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}